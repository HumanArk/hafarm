#!/bin/bash  
#SBATCH --array={{ start_frame }}-{{ end_frame }}:{{ step_frame }}
#SBATCH --nice={{ priority }}
#SBATCH -N {{ tile_x }}-{{ tile_x * tile_y }}
#SBATCH{% if slots %} -n {{ slots }}{% else %} --exclusive{% endif %}
{%- if rerun_on_error %}
#SBATCH --requeue
{%- endif %}
{%- if job_on_hold %}
#SBATCH -H
{%- endif %}
{%- if req_tmpdir > 0 %}
#SBATCH --tmp={{ req_tmpdir* 1024 }}
{%- endif %}
{%- if req_memory > 0 %}
#SBATCH --mem={{ req_memory* 1024 }}
{%- endif %}
{%- if req_license %}
#SBATCH -L {{ req_license.split('=') | join(':') }}
{%- endif %}
{%- if slurm_aftercorr %}
#SBATCH -d aftercorr:{{ slurm_aftercorr|join(',') }}
{%- endif %}
{%- if email_list %}
#SBATCH --mail-user={{ email_list|join(',') }}
{%- endif %}
{%- if queue %}
#SBATCH -p {{ queue }}
{%- endif %}
{%- if group %}
{% if group != "allhosts" %}#SBATCH -C {{ group }}{% endif %}
{%- endif %}
{%- if slurm_exclude_nodes %}
#SBATCH --exclude={{ slurm_exclude_nodes|join(',') }}
{%- endif %}


HAFARM_VERSION={{ env['REZ_HAFARM_VERSION'] }}
LAST_FRAME={{ end_frame }}
RANGE_FRAME=$[${SLURM_ARRAY_TASK_ID}+{{ step_frame }}]
if ((${RANGE_FRAME}>${LAST_FRAME})); then RANGE_FRAME=${LAST_FRAME}; fi

OUTPUT_PICTURE="{{ output_picture }}"
echo Job start: `date`
echo Machine name: ${HOSTNAME}
echo User    name: ${USER}
echo Slots:        $NSLOTS
echo Memory stats: `egrep 'Mem|Cache|Swap' /proc/meminfo`
echo Scene file  : {{ scene_file }}

{%- if pre_render_script %}
{{ pre_render_script }}
{%- endif %}

for tile in `seq 0 {{ (tile_x * tile_y)-1 }}`; do
	output_image=`printf '{{ output_picture }}' ${tile}`
	srun -N 1 sh -c "{{ command }} -t count={{ tile_x }}x{{ tile_y }},index=${tile} {{ command_arg|join(' ') }} {{ scene_file }} $output_image " &
	pids[${i}]=$!
done

wait

exit_code=0

{%- if post_render_script %}
{{ post_render_script }}
{%- endif %}

echo Job ends: `date`
echo Render target: "{{ output_picture }}"
echo Commands was: "{{ command }} -t count={{ tile_x }}x{{ tile_y }},index=${tile} {{ command_arg|join(' ') }} {{ scene_file }} {{ output_picture }}"

exit $exit_code
